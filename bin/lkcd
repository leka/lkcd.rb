#!/usr/bin/env ruby
require 'gli'
require 'lkcd'

include GLI::App

program_desc 'Command Line Tool to manage Leka\'s Curriculum data'

version Lkcd::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'Example command to understand how everything works'
# arg_name 'name compliment'
command :sayHi do |c|
	c.desc 'You are amazing'
	c.switch :a

	c.desc 'You are beautiful'
	c.switch :b

	c.desc 'Your name'
	c.flag [:n, :name]
	c.action do |global_options,options,args|

		compliment = options[:a] ? 'You are amazing. ' : ''
		compliment += options[:b] ? 'You are beautiful. ' : ''

		puts "Hello #{sayHi(options[:name]) + ". " + compliment}"

	end
end

desc 'Describe pdf here'
arg_name 'Describe arguments to pdf here'
command :pdf do |c|
	c.action do |global_options,options,args|
		puts "pdf command ran"
	end
end

pre do |global,command,options,args|
	# Pre logic here
	# Return true to proceed; false to abort and not call the
	# chosen command
	# Use skips_pre before a command to skip this block
	# on that command only
	true
end

post do |global,command,options,args|
	# Post logic here
	# Use skips_post before a command to skip this
	# block on that command only
end

on_error do |exception|
	# Error logic here
	# return false to skip default error handling
	true
end

exit run(ARGV)
